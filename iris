pipeline {
    agent any

    stages {
        stage('Deploy to EC2') {
            steps {
                sh '''
                ssh -o StrictHostKeyChecking=no ubuntu@54.209.94.204 "
                  set -e

                  echo '--- Updating system packages ---'
                  sudo apt update -y || true
                  sudo DEBIAN_FRONTEND=noninteractive apt install -y python3 python3-pip python3-venv git curl net-tools

                  echo '--- Preparing app folder ---'
                  mkdir -p ~/iris-app
                  cd ~/iris-app

                  if [ -d .git ]; then
                    echo 'Updating existing repo...'
                    git reset --hard || true
                    git pull origin main || git pull origin master
                  else
                    echo 'Cloning fresh repo...'
                    rm -rf ~/iris-app/*
                    git clone https://github.com/etichiranjeevi/IRIS-Flower-Classification.git .
                  fi

                  echo '--- Creating virtual environment ---'
                  rm -rf venv || true
                  python3 -m venv venv
                  source venv/bin/activate

                  echo '--- Installing dependencies ---'
                  pip install --upgrade pip
                  pip install -r requirements.txt

                  echo '--- Stopping old Flask app if running ---'
                  pkill -f \\"python app.py\\" || true

                  echo '--- Starting Flask app on 0.0.0.0:5000 ---'
                  nohup python app.py --host=0.0.0.0 --port=5000 > app.log 2>&1 &

                  sleep 3

                  echo '--- Debug: list running python processes ---'
                  ps -ef | grep python || true

                  echo '--- Debug: check port 5000 ---'
                  (netstat -tulnp | grep 5000) || echo 'Port 5000 not visible'

                  echo '--- Health check (local curl) ---'
                  curl -s http://127.0.0.1:5000/ || echo 'Flask did not respond'

                  echo '--- End of script reached ---'
                  exit 0
                "
                '''
            }
        }
    }
}
